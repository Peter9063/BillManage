<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/tx  
   	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   	http://www.springframework.org/schema/aop  
   	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:applicationConfig.properties" />
		<property name="fileEncoding" value="utf-8" />
	</bean>

	<task:annotation-driven />
	<!--<context:component-scan base-package="DongYu.WebBase.System.Quartz" />-->
	<!--<bean id="syncReadingTask" class="DongYu.WebBase.System.Quartz.SyncReadingTask" />-->
	<!--<task:scheduled-tasks scheduler="myScheduler">-->
	<!--&lt;!&ndash;每十分钟执行一次 passStudyTask：任务类中执行的方法      &ndash;&gt;-->
	<!--<task:scheduled ref="syncReadingTask" method="syncMeteringArea" cron="0 0 0/2 * * ? "/>-->
	<!--<task:scheduled ref="syncReadingTask" method="syncReadingTask" cron="0 0 0/2 * * ? "/>-->
	<!--<task:scheduled ref="syncReadingTask" method="syncMeteringStatistics" cron="0 0 0/2 * * ? "/>-->
	<!--<task:scheduled ref="syncReadingTask" method="syncAllBigMeterReading" cron="0 30 23 * * ? "/>-->
	<!--</task:scheduled-tasks>-->
	<task:scheduler id="myScheduler" pool-size="10"/>

	<!-- database config begin -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
		<property name="validationQuery" value="select 1 " />

		<!-- 这里建议配置为TRUE，防止取到的连接不可用，validationQuery非null才有效 -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
		<property name="testWhileIdle" value="true" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 ，对orcal有效-->
		<!-- <property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"	value="20" /> -->

		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:aspectj-autoproxy expose-proxy="true" />
	<!-- database config begin -->

	<!-- mybatis config begin -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
		 <!-- 把加载了 配置文件的 sqlSessionFactory 注入 SqlSessionTemplate模板-->
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg index="0" ref="sqlSessionFactory" />
	    <constructor-arg index="1" value="BATCH" />
    </bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="DongYu.WebBase.System.Mapping" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!-- mybatis config end -->
	
	<context:annotation-config />
	<context:component-scan base-package="DongYu.WebBase.System.Init,DongYu.WebBase.System.ServiceImp,DongYu.WebBase.System.Utils" />

	<!-- webApp exception handler begin -->
	<bean id="exceptionHandler"
		class="DongYu.WebBase.System.Service.Exception.SysBase.ExceptionHandler4ExtjsEnv" />
	<!-- webApp exception handler end -->
	
	<!--&lt;!&ndash; 扩展数据库配置_ERP数据库 begin  &ndash;&gt;-->
	<!--<bean id="dataSourceErp" class="com.alibaba.druid.pool.DruidDataSource"-->
		<!--init-method="init" destroy-method="close">-->
		<!--<property name="driverClassName" value="${erp.jdbc.driver}" />-->
		<!--<property name="url" value="${erp.jdbc.url}" />-->
		<!--<property name="username" value="${erp.jdbc.username}" />-->
		<!--<property name="password" value="${erp.jdbc.password}" />-->
		<!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
		<!--<property name="initialSize" value="1" />-->
		<!--<property name="minIdle" value="${erp.jdbc.minIdle}" />-->
		<!--<property name="maxActive" value="${erp.jdbc.maxActive}" />-->
		<!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
		<!--<property name="maxWait" value="${erp.jdbc.maxWait}" />-->
		<!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
		<!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
		<!--<property name="minEvictableIdleTimeMillis" value="300000" />-->
		<!--&lt;!&ndash; 验证连接有效与否的SQL，不同的数据配置不同 &ndash;&gt;-->
		<!--<property name="validationQuery" value="select 1 " />-->
		<!--&lt;!&ndash; 这里建议配置为TRUE，防止取到的连接不可用，validationQuery非null才有效 &ndash;&gt;-->
		<!--<property name="testOnBorrow" value="true" />-->
		<!--<property name="testOnReturn" value="false" />-->
		<!--&lt;!&ndash; 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 &ndash;&gt;-->
		<!--<property name="testWhileIdle" value="true" />-->
		<!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 ，对orcal有效&ndash;&gt;-->
		<!--&lt;!&ndash; <property name="poolPreparedStatements" value="false" />-->
		<!--<property name="maxPoolPreparedStatementPerConnectionSize"	value="20" /> &ndash;&gt;-->
		<!--&lt;!&ndash; 这里配置提交方式，默认就是TRUE，可以不用配置 &ndash;&gt;-->
		<!--<property name="defaultAutoCommit" value="true" />-->
	<!--</bean>-->

	<!--<bean id="transactionManagerErp"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSourceErp" />-->
	<!--</bean>-->
	<!--<tx:annotation-driven transaction-manager="transactionManagerErp" />-->
	<!--&lt;!&ndash; database config begin &ndash;&gt;-->

	<!--&lt;!&ndash; mybatis config begin &ndash;&gt;-->
	<!--<bean id="sqlSessionFactoryErp" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSourceErp" />-->
	<!--</bean>-->
		 <!--&lt;!&ndash; 把加载了 配置文件的 sqlSessionFactory 注入 SqlSessionTemplate模板&ndash;&gt;-->
	 <!--<bean id="sqlSessionTemplateErp" class="org.mybatis.spring.SqlSessionTemplate">-->
	    <!--<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryErp" />-->
	    <!--<constructor-arg name="executorType" value="BATCH" />-->
    <!--</bean>-->

	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--<property name="basePackage" value="DongYu.WebBase.System.Erp.Erp2BizBox.Mapping" />-->
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryErp"/>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 扩展数据库配置_ERP数据库 end  &ndash;&gt;-->
	
	
</beans>